name: 'Test'

on:
  push:
    branches: [ main ]

env:
  ACCESS_TOKEN_PRIVATE_KEY: ${{ vars.ACCESS_TOKEN_PRIVATE_KEY }}
  ACCESS_TOKEN_PUBLIC_KEY: ${{ vars.ACCESS_TOKEN_PUBLIC_KEY }}
  REFRESH_TOKEN_PRIVATE_KEY: ${{ vars.ACCESS_TOKEN_PRIVATE_KEY }}
  REFRESH_TOKEN_PUBLIC_KEY: ${{ vars.ACCESS_TOKEN_PUBLIC_KEY }}
  MYSQL_USER: test
  MYSQL_PASSWORD: test
  MYSQL_DATABASE: test
  DATABASE_URL: mysql://test:test@localhost:3306/test

permissions:
  contents: write
    
jobs:            
  test_report:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: myslq:8
        ports:
         - 3306:3306
        options:
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        node-version: [18.x]
        test-type:
          - test:cov
          - test:cov -- --coverage --coverageReporters json-summary
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Wait for MySQL to be Ready üïí
        run: dockerize -wait tcp://localhost:3306 -timeout 1m

      - name: Install
        run: npm ci

      - name: Setup database schema
        run: npm run db:deploy

      - name: Test üß™
        run: npm run ${{ matrix.test-type }}

      - name: Deploy Report üìä
        uses: JamesIves/github-pages-deploy-action@v4
        if: matrix.test-type == 'test:cov'
        with:
          branch: gh-pages
          folder: coverage/lcov-report
      
      - name: Create Comment
        id: coverageComment
        uses: MishaKav/jest-coverage-comment@main
        with:
          coverage-summary-path: ./coverage/coverage-summary.json
      
      - name: Update Badge üìå
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ vars.GIST_ID }}
          filename: coverage_ne_commerce.json
          label: coverage
          message: ${{ steps.coverageComment.outputs.coverage }}%
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: jest
