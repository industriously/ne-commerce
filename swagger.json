{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "NestJS DDD template using nestia + prisma"
    }
  ],
  "info": {
    "version": "1.0.0",
    "title": "NestDDD - NestJS DDD template"
  },
  "paths": {
    "/sign-in": {
      "post": {
        "tags": [
          "authentication"
        ],
        "parameters": [],
        "requestBody": {
          "description": "token 요청 권한을 가진 code를 포함한다.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICredentials.SignInBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "사용자 인증 토큰",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_ICredentials_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "Request body data is not following the promised type."
          }
        },
        "summary": "로그인 API",
        "description": "새로운 사용자가 로그인을 진행하면 oauth 서버에서 제공한 사용자 정보를 토대로\n사용자 계정을 생성합니다.\n\n비활성화된 사용자의 경우, 다시 활성화됩니다.",
        "x-nestia-namespace": "sign-in.signIn",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "로그인 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "authentication",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "token 요청 권한을 가진 code를 포함한다.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "사용자 인증 토큰",
                "kind": "text"
              }
            ]
          },
          {
            "name": "throw",
            "text": [
              {
                "text": "400 Request body data is not following the promised type.",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/token/refresh": {
      "get": {
        "tags": [
          "authentication"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "재발행된 access_token을 응답합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_string_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "인증 토큰 재발행 API",
        "description": "Authorization header로 refresh_token을 전달헤야 합니다.",
        "x-nestia-namespace": "token.refresh.refreshToken",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "인증 토큰 재발행 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "authentication",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "재발행된 access_token을 응답합니다.",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "주문 정보 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Try_lt_PaginatedResponse_lt_IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt__gt__gt_"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "주문 목록 조회 API",
        "description": "",
        "x-nestia-namespace": "orders.findMany",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "주문 목록 조회 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "orders",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "주문 정보 목록",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "orders"
        ],
        "parameters": [],
        "requestBody": {
          "description": "배송정보와 주문 상품 목록을 포함한다.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IOrder.ICreateBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "생성된 주문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IUnpaidOrder_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "주문 생성 API",
        "description": "",
        "x-nestia-namespace": "orders.create",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "주문 생성 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "orders",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "배송정보와 주문 상품 목록을 포함한다.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "생성된 주문 정보",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/orders/{order_id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "주문 번호",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "주문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.NotFound"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Forbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IOrder_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "단건 주문 조회 API",
        "description": "",
        "x-nestia-namespace": "orders.findOne",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "단건 주문 조회 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "orders",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "order_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "주문 번호",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "주문 정보",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/orders/{order_id}/payment": {
      "post": {
        "tags": [
          "orders"
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "주문 번호",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "주문 번호와 결제 서비스 고유 번호",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IOrder.IPaymentConfirmBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "주문 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.NotFound"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Forbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt__gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "결제 확인 API",
        "description": "외부 결제 서비스와 연동하여 결제 완료를 확인하고 그에 따라 주문 정보를 갱신한다.",
        "x-nestia-namespace": "orders.payment.comfirm",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "결제 확인 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "orders",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "order_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "주문 번호",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "주문 번호와 결제 서비스 고유 번호",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "주문 상세 정보",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "페이지 정보 1이상의 정수, default 1",
            "schema": {
              "type": "number",
              "nullable": false
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "상품 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Try_lt_PaginatedResponse_lt_IProduct.Summary_gt__gt_"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "Value of the URL query 'page' is not a valid format."
          }
        },
        "summary": "상품 목록 조회 API",
        "description": "전체 상품 목록 조회",
        "x-nestia-namespace": "products.findMany",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "상품 목록 조회 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "products",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "page",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "페이지 정보 1이상의 정수, default 1",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "상품 목록",
                "kind": "text"
              }
            ]
          },
          {
            "name": "throw",
            "text": [
              {
                "text": "400 Value of the URL query 'page' is not a valid format.",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "products"
        ],
        "parameters": [],
        "requestBody": {
          "description": "상품 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProduct.CreateInput"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "생성한 상품 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Forbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IProduct.Detail_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "Request body data is not following the promised type."
          }
        },
        "summary": "상품 생성 요청 API",
        "description": "",
        "x-nestia-namespace": "products.create",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "상품 생성 요청 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "products",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "상품 생성 정보",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "생성한 상품 상세 정보",
                "kind": "text"
              }
            ]
          },
          {
            "name": "throw",
            "text": [
              {
                "text": "400 Request body data is not following the promised type.",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "대상 상품 고유 번호",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "상품 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.NotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IProduct.Detail_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "상품 상세 조회 API",
        "description": "",
        "x-nestia-namespace": "products.findOne",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "상품 상세 조회 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "products",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "product_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "대상 상품 고유 번호",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "상품 상세 정보",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "대상 상품 고유 번호",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "변경할 상품 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProduct.UpdateInput"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "변경된 상품 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.NotFound"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Forbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IProduct.Detail_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "Request body data is not following the promised type."
          }
        },
        "summary": "상품 수정 요청 API",
        "description": "",
        "x-nestia-namespace": "products.update",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "상품 수정 요청 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "products",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "product_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "대상 상품 고유 번호",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "변경할 상품 정보",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "변경된 상품 상세 정보",
                "kind": "text"
              }
            ]
          },
          {
            "name": "throw",
            "text": [
              {
                "text": "400 Request body data is not following the promised type.",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "대상 상품 고유 번호",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "true",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.NotFound"
                    },
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Forbidden"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_true_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "상품 삭제(비활성화) 요청 API",
        "description": "",
        "x-nestia-namespace": "products.inActivate",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "상품 삭제(비활성화) 요청 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "products",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "product_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "대상 상품 고유 번호",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "true",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "사용자 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IUser_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "내 상세 정보 보기 API",
        "description": "",
        "x-nestia-namespace": "user.getDetail",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "내 상세 정보 보기 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "사용자 상세 정보",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "user"
        ],
        "parameters": [],
        "requestBody": {
          "description": "수정할 정보를 포함합니다.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser.IUpdate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "수정된 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IUser_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "Request body data is not following the promised type."
          }
        },
        "summary": "내 정보 수정 API",
        "description": "",
        "x-nestia-namespace": "user.update",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "내 정보 수정 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "수정할 정보를 포함합니다.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "수정된 상세 정보",
                "kind": "text"
              }
            ]
          },
          {
            "name": "throw",
            "text": [
              {
                "text": "400 Request body data is not following the promised type.",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "true",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.Invalid"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_true_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "내 계정 비활성화 API",
        "description": "사용자는 로그인을 통해 계정을 활성화할 수 있습니다.\n\n비활성화된 계정은 조회되지 않습니다.",
        "x-nestia-namespace": "user.inActivate",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "내 계정 비활성화 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "true",
                "kind": "text"
              }
            ]
          }
        ]
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "조회 대상의 id 입니다.",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "사용자 공개 정보",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IFailure.Business.NotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ISuccess_lt_IUser.ISummary_gt_"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "Value of the URL parameter \"user_id\" is not a valid UUID."
          }
        },
        "summary": "사용자 정보 조회 API",
        "description": "활성화된 사용자의 정보만 조회합니다.",
        "x-nestia-namespace": "users.findOne",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "사용자 정보 조회 API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "user_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "조회 대상의 id 입니다.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "사용자 공개 정보",
                "kind": "text"
              }
            ]
          },
          {
            "name": "throw",
            "text": [
              {
                "text": "400 Value of the URL parameter \"user_id\" is not a valid UUID.",
                "kind": "text"
              }
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ICredentials.SignInBody": {
        "type": "object",
        "properties": {
          "oauth_type": {
            "type": "string",
            "enum": [
              "google",
              "github"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "code": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "oauth_type",
          "code"
        ],
        "x-typia-jsDocTags": []
      },
      "IFailure.Business.Invalid": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "business"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "event": {
            "type": "string",
            "enum": [
              "Invalid"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "message": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "event",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_ICredentials_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/ICredentials",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "ICredentials": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "id_token": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "access_token",
          "refresh_token",
          "id_token"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_string_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "Try_lt_PaginatedResponse_lt_IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt__gt__gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/PaginatedResponse_lt_IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt__gt_",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "PaginatedResponse_lt_IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt__gt_": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt_",
              "x-typia-required": true
            },
            "nullable": false,
            "x-typia-required": true
          },
          "page": {
            "type": "integer",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 1
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "1",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 1
          },
          "total_count": {
            "type": "number",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "data",
          "page",
          "total_count"
        ],
        "x-typia-jsDocTags": []
      },
      "IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt_": {
        "type": "object",
        "properties": {
          "payment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IPayment.ByCard",
                "x-typia-required": true
              },
              {
                "$ref": "#/components/schemas/IPayment.ByTrans",
                "x-typia-required": true
              }
            ],
            "x-typia-required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "on hold",
              "paid",
              "processing",
              "delivering",
              "delivered"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "order_item_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOrder.IOrderItem",
              "x-typia-required": true
            },
            "nullable": false,
            "x-typia-required": true
          },
          "orderer_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "recipient": {
            "$ref": "#/components/schemas/IOrder.IRecipient",
            "x-typia-required": true
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          }
        },
        "nullable": false,
        "required": [
          "payment",
          "status",
          "id",
          "order_item_list",
          "orderer_id",
          "recipient",
          "created_at",
          "updated_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IPayment.ByCard": {
        "type": "object",
        "properties": {
          "card_code": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "card_name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "card_number": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "apply_num": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "pay_method": {
            "type": "string",
            "enum": [
              "card"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "paid",
              "failed",
              "cancelled"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "amount": {
            "type": "number",
            "nullable": false,
            "x-typia-required": true
          },
          "transaction_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "card_code",
          "card_name",
          "card_number",
          "apply_num",
          "pay_method",
          "status",
          "amount",
          "transaction_id"
        ],
        "x-typia-jsDocTags": []
      },
      "IPayment.ByTrans": {
        "type": "object",
        "properties": {
          "bank_code": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "bank_name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "pay_method": {
            "type": "string",
            "enum": [
              "trans"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "paid",
              "failed",
              "cancelled"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "amount": {
            "type": "number",
            "nullable": false,
            "x-typia-required": true
          },
          "transaction_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "bank_code",
          "bank_name",
          "pay_method",
          "status",
          "amount",
          "transaction_id"
        ],
        "x-typia-jsDocTags": []
      },
      "IOrder.IOrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "quantity": {
            "type": "integer",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 1
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "1",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 1
          },
          "product_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "product_name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "product_price": {
            "type": "integer",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 0
          }
        },
        "nullable": false,
        "required": [
          "id",
          "quantity",
          "product_id",
          "product_name",
          "product_price"
        ],
        "x-typia-jsDocTags": []
      },
      "IOrder.IRecipient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "address": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "phone": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "name",
          "address",
          "phone"
        ],
        "x-typia-jsDocTags": []
      },
      "IOrder.ICreateBody": {
        "type": "object",
        "properties": {
          "recipient": {
            "$ref": "#/components/schemas/IOrder.IRecipient",
            "x-typia-required": true
          },
          "order_item_list": {
            "$ref": "#/components/schemas/IOrder.ICreateOrderItem",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "recipient",
          "order_item_list"
        ],
        "x-typia-jsDocTags": []
      },
      "IOrder.ICreateOrderItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "quantity": {
            "type": "integer",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 1
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "1",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 1
          }
        },
        "nullable": false,
        "required": [
          "product_id",
          "quantity"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_IUnpaidOrder_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/IUnpaidOrder",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "IUnpaidOrder": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "null",
            "x-typia-required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "unpaid"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "order_item_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOrder.IOrderItem",
              "x-typia-required": true
            },
            "nullable": false,
            "x-typia-required": true
          },
          "orderer_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "recipient": {
            "$ref": "#/components/schemas/IOrder.IRecipient",
            "x-typia-required": true
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          }
        },
        "nullable": false,
        "required": [
          "payment",
          "status",
          "id",
          "order_item_list",
          "orderer_id",
          "recipient",
          "created_at",
          "updated_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IFailure.Business.NotFound": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "business"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "event": {
            "type": "string",
            "enum": [
              "NotFound"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "message": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "event",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "IFailure.Business.Forbidden": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "business"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "event": {
            "type": "string",
            "enum": [
              "Forbidden"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "message": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "event",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_IOrder_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IUnpaidOrder",
                "x-typia-required": true
              },
              {
                "$ref": "#/components/schemas/IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt_.o1",
                "x-typia-required": true
              }
            ],
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt_.o1": {
        "type": "object",
        "properties": {
          "payment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IPayment.ByCard",
                "x-typia-required": true
              },
              {
                "$ref": "#/components/schemas/IPayment.ByTrans",
                "x-typia-required": true
              }
            ],
            "x-typia-required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "on hold",
              "paid",
              "processing",
              "delivering",
              "delivered"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "order_item_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOrder.IOrderItem",
              "x-typia-required": true
            },
            "nullable": false,
            "x-typia-required": true
          },
          "orderer_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "recipient": {
            "$ref": "#/components/schemas/IOrder.IRecipient",
            "x-typia-required": true
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          }
        },
        "nullable": false,
        "required": [
          "payment",
          "status",
          "id",
          "order_item_list",
          "orderer_id",
          "recipient",
          "created_at",
          "updated_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IOrder.IPaymentConfirmBody": {
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "transaction_id"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt__gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/IPaidOrder_lt__doublequote_on_space_hold_doublequote__space__or__space__doublequote_paid_doublequote__space__or__space__doublequote_processing_doublequote__space__or__space__doublequote_delivering_doublequote__space__or__space__doublequote_delivered_doublequote__gt_",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "Try_lt_PaginatedResponse_lt_IProduct.Summary_gt__gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/PaginatedResponse_lt_IProduct.Summary_gt_",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "PaginatedResponse_lt_IProduct.Summary_gt_": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IProduct.Summary",
              "x-typia-required": true
            },
            "nullable": false,
            "x-typia-required": true
          },
          "page": {
            "type": "integer",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 1
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "1",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 1
          },
          "total_count": {
            "type": "number",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "data",
          "page",
          "total_count"
        ],
        "x-typia-jsDocTags": []
      },
      "IProduct.Summary": {
        "type": "object",
        "properties": {
          "vender": {
            "$ref": "#/components/schemas/IProduct.Vender",
            "x-typia-required": true
          },
          "name": {
            "type": "string",
            "nullable": false,
            "description": "상품명",
            "x-typia-required": true
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "상품 가격(원)",
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 0
          },
          "description": {
            "type": "string",
            "nullable": false,
            "description": "상품 설명",
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "description": "상품 고유 id",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^[A-Z0-9]{10}$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^[A-Z0-9]{10}$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^[A-Z0-9]{10}$"
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "상품 정보 생성 일시\n\nISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          }
        },
        "nullable": false,
        "required": [
          "vender",
          "name",
          "price",
          "description",
          "id",
          "created_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IProduct.Vender": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "id",
          "name"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_IProduct.Detail_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/IProduct.Detail",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "IProduct.Detail": {
        "type": "object",
        "properties": {
          "vender": {
            "$ref": "#/components/schemas/IProduct.Vender",
            "x-typia-required": true
          },
          "name": {
            "type": "string",
            "nullable": false,
            "description": "상품명",
            "x-typia-required": true
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "상품 가격(원)",
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 0
          },
          "description": {
            "type": "string",
            "nullable": false,
            "description": "상품 설명",
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "description": "상품 고유 id",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^[A-Z0-9]{10}$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^[A-Z0-9]{10}$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^[A-Z0-9]{10}$"
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "상품 정보 생성 일시\n\nISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "is_deleted": {
            "type": "boolean",
            "nullable": false,
            "description": "구매 가능 상태",
            "x-typia-required": true
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "상품 정보 최근 수정 일시\n\nISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          }
        },
        "nullable": false,
        "required": [
          "vender",
          "name",
          "price",
          "description",
          "id",
          "created_at",
          "is_deleted",
          "updated_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IProduct.CreateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "description": "상품명",
            "x-typia-required": true
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "상품 가격(원)",
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "minimum": 0
          },
          "description": {
            "type": "string",
            "nullable": false,
            "description": "상품 설명",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "name",
          "price",
          "description"
        ],
        "x-typia-jsDocTags": []
      },
      "IProduct.UpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "description": "상품명",
            "x-typia-required": false
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "상품 가격(원)",
            "x-typia-metaTags": [
              {
                "kind": "type",
                "value": "uint"
              },
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "type",
                "text": [
                  {
                    "text": "uint",
                    "kind": "text"
                  }
                ]
              },
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "minimum": 0
          },
          "description": {
            "type": "string",
            "nullable": false,
            "description": "상품 설명",
            "x-typia-required": false
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_true_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "type": "boolean",
            "enum": [
              true
            ],
            "nullable": false,
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_IUser_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ICustomer",
                "x-typia-required": true
              },
              {
                "$ref": "#/components/schemas/IVender",
                "x-typia-required": true
              }
            ],
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "ICustomer": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "nullable": false,
            "description": "사용자 종류",
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "format",
                "value": "uuid"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "uuid",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "is_deleted": {
            "type": "boolean",
            "nullable": false,
            "x-typia-required": true
          },
          "address": {
            "type": "string",
            "nullable": true,
            "x-typia-required": true
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^010-[0-9]{4}-[0-9]{4}$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^010-[0-9]{4}-[0-9]{4}$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^010-[0-9]{4}-[0-9]{4}$"
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "sub": {
            "type": "string",
            "nullable": false,
            "description": "oauth server's user id",
            "x-typia-required": true
          },
          "oauth_type": {
            "type": "string",
            "enum": [
              "google",
              "github"
            ],
            "nullable": false,
            "description": "oauth server type",
            "x-typia-required": true
          },
          "email": {
            "type": "string",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "format",
                "value": "email"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "email",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "format": "email"
          }
        },
        "nullable": false,
        "required": [
          "type",
          "id",
          "name",
          "is_deleted",
          "address",
          "phone",
          "created_at",
          "updated_at",
          "sub",
          "oauth_type",
          "email"
        ],
        "x-typia-jsDocTags": []
      },
      "IVender": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "phone": {
            "type": "string",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^010-[0-9]{4}-[0-9]{4}$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^010-[0-9]{4}-[0-9]{4}$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^010-[0-9]{4}-[0-9]{4}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "vender"
            ],
            "nullable": false,
            "description": "사용자 종류",
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "format",
                "value": "uuid"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "uuid",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "is_deleted": {
            "type": "boolean",
            "nullable": false,
            "x-typia-required": true
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "ISO 8601 type",
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "pattern": "^(19[6-9][0-9]|2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])\\.[0-9]{3}Z$"
          },
          "sub": {
            "type": "string",
            "nullable": false,
            "description": "oauth server's user id",
            "x-typia-required": true
          },
          "oauth_type": {
            "type": "string",
            "enum": [
              "google",
              "github"
            ],
            "nullable": false,
            "description": "oauth server type",
            "x-typia-required": true
          },
          "email": {
            "type": "string",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "format",
                "value": "email"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "email",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "format": "email"
          }
        },
        "nullable": false,
        "required": [
          "address",
          "phone",
          "type",
          "id",
          "name",
          "is_deleted",
          "created_at",
          "updated_at",
          "sub",
          "oauth_type",
          "email"
        ],
        "x-typia-jsDocTags": []
      },
      "IUser.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": false
          },
          "address": {
            "type": "string",
            "nullable": true,
            "x-typia-required": false
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "x-typia-metaTags": [
              {
                "kind": "pattern",
                "value": "^010-[0-9]{4}-[0-9]{4}$"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "pattern",
                "text": [
                  {
                    "text": "^010-[0-9]{4}-[0-9]{4}$",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "pattern": "^010-[0-9]{4}-[0-9]{4}$"
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "ISuccess_lt_IUser.ISummary_gt_": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": false,
            "x-typia-required": true
          },
          "data": {
            "$ref": "#/components/schemas/IUser.ISummary",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "type",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "IUser.ISummary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "x-typia-required": true
          },
          "id": {
            "type": "string",
            "nullable": false,
            "x-typia-metaTags": [
              {
                "kind": "format",
                "value": "uuid"
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "format",
                "text": [
                  {
                    "text": "uuid",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "customer",
              "vender",
              "admin"
            ],
            "nullable": false,
            "description": "사용자 종류",
            "x-typia-required": true
          }
        },
        "nullable": false,
        "required": [
          "name",
          "id",
          "type"
        ],
        "x-typia-jsDocTags": []
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}